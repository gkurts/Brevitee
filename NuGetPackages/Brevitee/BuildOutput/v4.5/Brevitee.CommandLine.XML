<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Brevitee.CommandLine</name>
    </assembly>
    <members>
        <member name="M:Brevitee.CommandLine.CommandLineInterface.Confirm">
            <summary>
            Prompts the user for [y]es or [n]o returning true for [y] and false for [n].
            </summary>
            <returns>boolean</returns>
        </member>
        <member name="M:Brevitee.CommandLine.CommandLineInterface.Confirm(System.String)">
            <summary>
            Prompts the user for [y]es or [n]o returning true for [y] and false for [n].
            </summary>
            <param name="message">Optional message for the user.</param>
            <returns></returns>
        </member>
        <member name="M:Brevitee.CommandLine.CommandLineInterface.Confirm(System.String,System.ConsoleColor,System.Boolean)">
            <summary>
            Prompts the user for [y]es or [n]o returning true for [y] and false for [n].
            </summary>
            <param name="message">Optional message for the user.</param>
            <param name="allowQuit">If true provides an additional [q]uit option which if selected
            will call Environment.Exit(0).</param>
            <returns>boolean</returns>
        </member>
        <member name="M:Brevitee.CommandLine.CommandLineInterface.Prompt(System.String,System.ConsoleColor)">
            <summary>
            Prompts the user for input.
            </summary>
            <param name="message">The message.</param>
            <returns>string</returns>
        </member>
        <member name="M:Brevitee.CommandLine.CommandLineInterface.Out">
            <summary>
            Writes a newline character to the console using Console.WriteLine()
            </summary>
        </member>
        <member name="M:Brevitee.CommandLine.CommandLineInterface.OutLineFormat(System.String,System.ConsoleColor,System.Object[])">
            <summary>
            Print the specified message in the specified
            color to the console using the specified string.format
            args to format the message.
            </summary>
            <param name="message"></param>
            <param name="color"></param>
            <param name="formatArgs"></param>
        </member>
        <member name="M:Brevitee.CommandLine.CommandLineInterface.AddValidArgument(System.String,System.String)">
            <summary>
            Makes the specified name a valid command line argument.  Command line
            arguments are assumed to be in the format /&lt;name&gt;:&lt;value&gt;.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Brevitee.CommandLine.CommandLineInterface.AddSwitches(System.Type)">
            <summary>
            Calls AddValidArgument for every ConsoleAction that has a 
            CommandLineSwitch defined
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:Brevitee.CommandLine.CommandLineInterface.AddValidArgument(System.String,System.Boolean,System.String,System.String)">
            <summary>
            Makes the specified name a valid command line argument.  Command line
            arguments are assumed to be in the format /&lt;name&gt;:&lt;value&gt;.
            </summary>
            <param name="name">The name of the command line argument.</param>
            <param name="allowNull">If true no value for the specified name is necessary.</param>
        </member>
        <member name="P:Brevitee.CommandLine.CommandLineInterface.Arguments">
            <summary>
            Represents arguments after parsing with a call to ParseArgs.  Arguments should be 
            passed in on the command line in the format /&lt;name&gt;:&lt;value&gt;.
            </summary>
        </member>
        <member name="E:Brevitee.CommandLine.CommandLineInterface.ArgsParsed">
            <summary>
            Event fired after command line arguments are parsed by a call to ParseArgs.
            </summary>
        </member>
        <member name="E:Brevitee.CommandLine.CommandLineInterface.ArgsParsedError">
            <summary>
            Event fired after command line arguments are parsed by a call to ParseArgs
            and there was an error.
            </summary>
        </member>
        <member name="P:Brevitee.CommandLine.ConsoleAction.ValueExample">
            <summary>
            A string representing an example of a valid value, for example [filename]
            </summary>
        </member>
        <member name="T:Brevitee.CommandLine.ConsoleExtensions">
            <summary>
            This class exists because of an initial limitation
            requiring all code to be compatible to .net 1.1.
            All code has since been converted to take advantage
            of the ConsoleColor enumeration.  This class was
            left in place to catch any calls that are still
            being made to it.
            </summary>
        </member>
        <member name="M:Brevitee.CommandLine.ConsoleExtensions.SetTextColor">
            <summary>
            Calls Console.ResetColor()
            </summary>
        </member>
        <member name="M:Brevitee.CommandLine.ConsoleExtensions.SetTextColor(System.ConsoleColor)">
            <summary>
            This method exists because this toolkit was written 
            prior to the introduction of the ConsoleColor class
            and this was originally using PInvoke style console
            color setting.  This method has been updated to use
            ConsoleColor and left in place so all existing 
            calls to this method don't break.
            </summary>
            <param name="textColor"></param>
        </member>
        <member name="P:Brevitee.CommandLine.ConsoleInvokeableMethod.SwitchValue">
            <summary>
            Used to help build usage examples for /? 
            </summary>
        </member>
        <member name="M:Brevitee.CommandLine.Extensions.Run(System.String,System.Int32)">
            <summary>
            Executes the current string on the command line
            and returns the output.
            </summary>
            <param name="command">a valid command line</param>
            <returns>ProcessOutput</returns>
        </member>
        <member name="T:Brevitee.CommandLine.ParsedArguments">
            <summary>
            Class used to parse command line arguments.  All arguments are 
            assumed to be in the format /&lt;name&gt;:&lt;value&gt; or an ArgumentException will be thrown 
            during parsing.
            </summary>
        </member>
    </members>
</doc>
