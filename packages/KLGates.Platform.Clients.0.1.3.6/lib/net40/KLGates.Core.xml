<?xml version="1.0"?>
<doc>
    <assembly>
        <name>KLGates.Core</name>
    </assembly>
    <members>
        <member name="T:KLGates.Core.CustomException">
            <summary>
            Intended to act as the base class for any custom exceptions allowing simplified
            message formatting using the same method signature as string.Format.
            </summary>
        </member>
        <member name="M:KLGates.Core.CustomException.#ctor(System.String,System.Object[])">
            <summary>
            Instantiate a new instance of CustomException using the specified messageFormat
            and formatArgs.
            </summary>
            <param name="messageFormat"></param>
            <param name="formatArgs"></param>
        </member>
        <member name="T:KLGates.Core.DataException">
            <summary>
            The exception that is thrown when data returned from a database query is not as expected.  This
            exception is meant specifically to address invalid lookup data.
            </summary>
        </member>
        <member name="T:KLGates.Core.ExceptionHelper">
            <summary>
            Helper class useful for argument validation and throwing custom exceptions 
            with formatted messages for improved readability.
            </summary>
        </member>
        <member name="M:KLGates.Core.ExceptionHelper.ThrowIfNull(System.Object,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentNullException"/> if the specified objectToCheck
            is null.
            </summary>
            <param name="objectToCheck">The object to check.</param>
            <param name="paramName">The name of the parameter.</param>
        </member>
        <member name="M:KLGates.Core.ExceptionHelper.ThrowIfEmptyOrNull(System.String,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentNullException"/> if the specified stringToCheck
            is null or an empty <see cref="T:System.String"/>.
            </summary>
            <param name="stringToCheck"></param>
            <param name="paramName"></param>
        </member>
        <member name="M:KLGates.Core.ExceptionHelper.ThrowIfIsNotOfType``1(System.Object,System.String)">
            <summary>
            Throws an InvalidOperationException if the specified objectToCheck is not 
            of type T (checked by "is" keyword).
            </summary>
            <typeparam name="T">The generic type to check the object against</typeparam>
            <param name="objectToCheck">The object to check</param>
            <param name="paramName">The name of the param</param>
            <exception cref="T:System.ArgumentNullException">ArgumentNullException</exception>
        </member>
        <member name="M:KLGates.Core.ExceptionHelper.Throw``1(System.String,System.Object[])">
            <summary>
            Throws an exception of the specified generic type
            </summary>
            <typeparam name="T">The type of the exception to throw.</typeparam>
            <param name="messageFormat">The format of the message as expected by the first parameter to 
            <see cref="M:System.String.Format(System.String,System.Object)"/></param>
            <param name="args">The arguments used to format the message as expected by the second parameter
            to <see cref="M:System.String.Format(System.String,System.Object)"/></param>
        </member>
        <member name="M:KLGates.Core.Extensions.CustomAttributeExtensions.GetFirstMethodWithAttributeOfType``1(System.Type)">
            <summary>
            Gets the MethodInfo for the first method found in the specified typeToAnalyze
            that has a custom attribute of the specified type T.  Returns null if none
            are found.
            </summary>
            <typeparam name="T">the type of the custom attribute to look for</typeparam>
            <param name="typeToAnalyze">the type to analyze</param>
            <returns>MethodInfo or null</returns>
        </member>
        <member name="M:KLGates.Core.Extensions.CustomAttributeExtensions.GetFirstProperyWithAttributeOfType``1(System.Type)">
            <summary>
            Gets the first PropertyInfo with a custom attribute of the specified generic type T
            </summary>
            <typeparam name="T">The generic type of the attribute to search for</typeparam>
            <param name="typeToAnalyze"></param>
            <returns></returns>
        </member>
        <member name="M:KLGates.Core.Extensions.CustomAttributeExtensions.GetFirstProperyWithAttributeOfType``1(System.Type,``0@)">
            <summary>
            Gets the first PropertyInfo with a custom attribute of the specified generic type T
            </summary>
            <typeparam name="T">The generic type of the attribute to search for</typeparam>
            <param name="typeToAnalyze">The type to analyze</param>
            <param name="attribute">The first attribute found of the specified generic type.</param>
            <returns></returns>
        </member>
        <member name="M:KLGates.Core.Extensions.CustomAttributeExtensions.GetPropertiesWithAttributeOfType``1(System.Type)">
            <summary>
            Get all the PropertyInfos that have the specified Attribute T addorning them.
            </summary>
            <typeparam name="T">The type of the attribute to that must be addorning the property</typeparam>
            <param name="typeToAnalyze">The type to search for properties on</param>
            <returns></returns>
        </member>
        <member name="M:KLGates.Core.Extensions.CustomAttributeExtensions.GetPropertiesWithAttributeOfType``1(System.Type,System.Type)">
            <summary>
            Get all the PropertyInfos that have the specified Attribute T addorning them.
            </summary>
            <typeparam name="T">The type of the attribute to that must be addorning the property</typeparam>
            <param name="typeToAnalyze">The type to search for properties on</param>
            <param name="limitToType">The type that the property must be of for it to be returned</param>
            <returns></returns>
        </member>
        <member name="M:KLGates.Core.Extensions.CustomAttributeExtensions.GetPropertiesWithAttributeOfType``1(System.Type,System.Boolean)">
            <summary>
            Get all the PropertyInfos that have the specified Attribute T addorning them.
            </summary>
            <typeparam name="T">The type of the attribute to that must be addorning the property</typeparam>
            <param name="typeToAnalyze">The type to search for properties on</param>
            <param name="limitToType">The of that the property must be of for it to be returned</param>
            <param name="inherit">Specifies whether to search the inheritance chain.</param>
            <returns></returns>
        </member>
        <member name="M:KLGates.Core.Extensions.CustomAttributeExtensions.GetPropertiesWithAttributeOfType``1(System.Type,System.Type,System.Boolean)">
            <summary>
            Get all the PropertyInfos that have the specified Attribute T addorning them.
            </summary>
            <typeparam name="T">The type of the attribute to that must be addorning the property</typeparam>
            <param name="typeToAnalyze">The type to search for properties on</param>
            <param name="limitToType">The of that the property must be of for it to be returned</param>
            <returns></returns>
        </member>
        <member name="M:KLGates.Core.Extensions.DictionaryExtensions.ToArray``2(System.Collections.Generic.Dictionary{``0,``1})">
            <summary>
            Return the values of the specified dictionary as an array, the same as ValuesToArray.
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="dictionary"></param>
            <returns></returns>
        </member>
        <member name="M:KLGates.Core.Extensions.DictionaryExtensions.ValuesToArray``2(System.Collections.Generic.Dictionary{``0,``1})">
            <summary>
            Return the values of the specified dictionary as an array, the same as ToArray.
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="dictionary"></param>
            <returns></returns>
        </member>
        <member name="T:KLGates.Core.Extensions.NamespaceDoc">
             <summary>
            The KLGates.Core.Extensions namespace contains extension method definitions for specific and generic types.
             </summary>
        </member>
        <member name="M:KLGates.Core.Extensions.ObjectExtensions.ToAnonymous``1(System.Collections.IEnumerable,System.Func{``0,System.Object})">
            <summary>
            Calls the specified anonymizer for each object in the IEnumberable
            passing the object itself to the anonymizer.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="toAnonymize"></param>
            <param name="anonymizer"></param>
            <returns></returns>
        </member>
        <member name="M:KLGates.Core.Extensions.ObjectExtensions.ToAnonymous``1(``0,System.Func{``0,System.Object})">
            <summary>
            Intended to convert the specified/current object of type T to an
            anonymous object.  This is specifically useful in avoiding infinite 
            recursion issues when serializing an object to json.  Implementation 
            must be provided by the developer.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="toAnonymize"></param>
            <param name="anonymizer"></param>
            <returns></returns>
        </member>
        <member name="M:KLGates.Core.Extensions.ObjectExtensions.ToArray``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Converts the specified/current instance of type IEnumerable&lt;T&gt; to an array of type R(esult)
            using the specified arrayifier.
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="R"></typeparam>
            <param name="source"></param>
            <param name="arrayifier"></param>
            <returns></returns>
        </member>
        <member name="M:KLGates.Core.Extensions.ObjectExtensions.ToJsonSafe``1(System.Object)">
            <summary>
            Converts the object to a Dynamic type with only the properties of the 
            original type that were addorned with the specified generic type Attrbiute.
            </summary>
            <typeparam name="A">The type of the Attribute to look for on the properties to be
            added to the new dynamic type instance</typeparam>
            <param name="instance">The object to convert</param>
            <returns>A Reflection only object</returns>
        </member>
        <member name="M:KLGates.Core.Extensions.ObjectExtensions.CreateDynamicType``1(System.Object)">
            <summary>
            Creates an in memory clone of the specified objectToClone.  The 
            clone will only have the properties of objectToClone that are
            addorned with the specified PropertyAttributeFilter generic type.
            </summary>
            <typeparam name="PropertyAttributeFilter">The attribute to look for when copying properties</typeparam>
            <param name="objectToClone">The object to clone</param>
            <returns>An in memory type that is not persisted to disk.</returns>
        </member>
        <member name="M:KLGates.Core.Extensions.ObjectExtensions.CreateDynamicType``1(System.Object,System.Boolean)">
            <summary>
            Creates an in memory clone of the specified objectToClone.  The 
            clone will only have the properties of objectToClone that are
            addorned with the specified PropertyAttributeFilter generic type.
            </summary>
            <typeparam name="PropertyAttributeFilter">The attribute to look for when copying properties</typeparam>
            <param name="objectToClone">The object to clone</param>
            <param name="concreteAttribute">If true the attributes must be of the specified type and not extenders of the type.</param>
            <returns>An in memory type that is not persisted to disk.</returns>
        </member>
        <member name="M:KLGates.Core.Extensions.ObjectExtensions.CreateDynamicType``1(System.Object,System.Reflection.Emit.AssemblyBuilder@)">
            <summary>
            Creates an in memory clone of the specified objectToClone.  The 
            clone will only have the properties of objectToClone that are
            addorned with the specified PropertyAttributeFilter generic type.
            </summary>
            <typeparam name="PropertyAttributeFilter">The attribute to look for when copying properties</typeparam>
            <param name="objectToClone">The object to clone</param>
            <returns>An in memory type that is not persisted to disk.</returns>
        </member>
        <member name="M:KLGates.Core.Extensions.ObjectExtensions.CreateDynamicType``1(System.Object,System.Reflection.Emit.AssemblyBuilder@,System.Boolean)">
            <summary>
            Creates an in memory clone of the specified objectToClone.  The 
            clone will only have the properties of objectToClone that are
            addorned with the specified PropertyAttributeFilter generic type.
            </summary>
            <typeparam name="PropertyAttributeFilter">The attribute to look for when copying properties</typeparam>
            <param name="objectToClone">The object to clone</param>
            <param name="concreteAttribute">If true the attributes must be of the specified type and not extenders of the type.</param>
            <returns>An in memory type that is not persisted to disk.</returns>
        </member>
        <member name="M:KLGates.Core.Extensions.StringExtensions.ToDelimited``1(``0[],KLGates.Core.Extensions.ToDelimitedDelegate{``0})">
            <summary>
            Intended to delimit the specified array of T using the
            specified ToDelimitedDelegate.  Each item will be represented
            by the return value of the specified ToDelimitedDelegate.
            </summary>
            <typeparam name="T">The type of objects in the specified array</typeparam>
            <param name="objectsToStringify">The objects</param>
            <param name="toDelimiteder">The ToDelimitedDelegate used to represent each object</param>
            <returns>string</returns>
        </member>
        <member name="M:KLGates.Core.Extensions.StringExtensions.ToDelimited``1(System.Collections.Generic.IEnumerable{``0},KLGates.Core.Extensions.ToDelimitedDelegate{``0},System.String)">
            <summary>
            Intended to delimit the specified array of T using the
            specified ToDelimitedDelegate.  Each item will be represented
            by the return value of the specified ToDelimitedDelegate.
            </summary>
            <typeparam name="T">The type of objects in the specified array</typeparam>
            <param name="objectsToStringify">The objects</param>
            <param name="toDelimiteder">The ToDelimitedDelegate used to represent each object</param>
            <param name="delimiter">The string to delimit with</param>
            <returns>string</returns>
        </member>
        <member name="M:KLGates.Core.Extensions.StringExtensions.ToDelimited(System.Object[],System.String)">
            <summary>
            Converts the specified array of objects into a delimited
            string of values using the ToString() method, delimited 
            by the specified delimiter.
            </summary>
            <param name="objectsToStringify">array of objects to stringify.</param>
            <param name="delimiter">the string to delimit the ouput by</param>
            <returns></returns>
        </member>
        <member name="M:KLGates.Core.Extensions.StringExtensions.ToDelimited(System.Object[],System.String,System.Boolean)">
            <summary>
            Converts the specified array of strings into a delimited
            string of values.
            </summary>
            <param name="stringArray">The string array</param>
            <param name="delimiter">The character to use to delimit the return string</param>
            <returns>string</returns>
        </member>
        <member name="M:KLGates.Core.Extensions.StringExtensions.Truncate(System.String,System.Int32)">
            <summary>
            Removes the specified number of characters from the end of the string.
            </summary>
            <param name="toTruncate"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:KLGates.Core.Extensions.StringExtensions.RemoveAllWhiteSpace(System.String)">
            <summary>
            Replaces all white space characters with an empty string. Essentially removes all white space from
            the supplied string. This is positionally independent meaning it does more than Trim().
            </summary>
            <param name="whiteSpaceString">The string with white space characters</param>
            <returns></returns>
        </member>
        <member name="M:KLGates.Core.Extensions.StringExtensions.RegexSplit(System.String,System.String,System.Boolean)">
            <summary>
            This breaks a string into an array.
            </summary>
            <param name="inputString">The full, unformatted string.</param>
            <param name="regexToSplitOn">The function will split the string into an array based on this regex pattern.</param>
            <param name="excludeWhiteSpace">If this is true, only non-null and non-whitespace strings are included in the array.
            If the regex slit has whitespace strings, they will be ignored in the returend array. This should be true in most cases.</param>
            <returns></returns>
        </member>
        <member name="M:KLGates.Core.Extensions.StringExtensions.SafeWriteFile(System.String,System.String)">
            <summary>
            Write the specified textToWrite to the current filePath in a thread safe way.
            </summary>
            <param name="filePath"></param>
            <param name="textToWrite"></param>
        </member>
        <member name="M:KLGates.Core.Extensions.StringExtensions.SafeWriteToFile(System.String,System.String)">
            <summary>
            Write the current text to the specified filePath in a thread safe way.
            </summary>
            <param name="textToWrite"></param>
            <param name="filePath"></param>
        </member>
        <member name="M:KLGates.Core.Extensions.StringExtensions.SafeWriteToFile(System.String,System.String,System.Boolean)">
            <summary>
            Write the current text to the specified filePath in a thread safe way.
            </summary>
            <param name="textToWrite"></param>
            <param name="filePath"></param>
            <param name="overwrite"></param>
        </member>
        <member name="M:KLGates.Core.Extensions.StringExtensions.SafeWriteFile(System.String,System.String,System.Boolean)">
            <summary>
            Write the specified text to the specified file in a thread safe way.
            </summary>
            <param name="filePath">The path to the file to write.</param>
            <param name="textToWrite">The text to write.</param>
            <param name="overwrite">True to overwrite.  If false and the file exists an InvalidOperationException will be thrown.</param>
        </member>
        <member name="M:KLGates.Core.Extensions.StringExtensions.SafeAppendToFile(System.String,System.String)">
            <summary>
            Appends the specified text to the specified file in a thread safe way.
            If the file doesn't exist it will be created.
            </summary>
            <param name="filePath"></param>
            <param name="textToAppend"></param>
        </member>
        <member name="T:KLGates.Core.IHasRequiredProperties">
            <summary>
            This interface is intended to be implemented by classes
            who wish to use the DefaultConfiguration class to set 
            its properties.
            </summary>
        </member>
        <member name="P:KLGates.Core.IHasRequiredProperties.RequiredProperties">
            <summary>
            When implemented in a derived class should
            return an array of strings containing the 
            name of each property of the object that 
            must be set prior to execution.
            </summary>
        </member>
        <member name="T:KLGates.Core.InvalidIHasRequiredPropertiesImplementationException">
            <summary>
            The excpetion that is thrown when a class deriving from <see cref="T:KLGates.Core.IHasRequiredProperties"/>
            reports the name of a property in the <see cref="P:KLGates.Core.IHasRequiredProperties.RequiredProperties"/> property
            that is not actually defined on the class.
            </summary>
        </member>
        <member name="T:KLGates.Core.NamespaceDoc">
            <summary>
            The KLGates.Core namespace contains core classes and utilities used to quickly perform common tasks with minimum code. 
            </summary>
        </member>
        <member name="T:KLGates.Core.Security.CollectionFilterCode">
            <summary>
            A legacy EDW construct created by the DB team used in
            Defining group definition rules.
            </summary>
        </member>
        <member name="T:KLGates.Core.Security.CollectionFilterCodeDbImpl">
            <summary>
            A legacy EDW construct created by the DB team used in
            Defining group definition rules.  In essence the same
            as CollectionFilterCode using DBA naming.
            </summary>
        </member>
        <member name="M:KLGates.Core.Security.Edward.CurrentUserIsInRole(System.String)">
            <summary>
            Returns true if the current user is in the specified roleName, otherwise
            false.  Always returns true if the specified roleName is "Everyone".
            </summary>
            <param name="roleName">The name of the role to check</param>
            <returns>bool</returns>
        </member>
        <member name="M:KLGates.Core.Security.Edward.SetUser">
            <summary>
            Sets the CurrentUser property using HttpContext.Current.User as
            the original principal.  If HttpContext.Current.User is null
            then this method has no effect.
            </summary>
        </member>
        <member name="M:KLGates.Core.Security.Edward.InitializeFromConfig">
            <summary>
            Initialize the comma or semicolon separated roles specified in the config file with the key Roles.
            </summary>
        </member>
        <member name="M:KLGates.Core.Security.Edward.CreateRole(KLGates.Core.Security.Application,System.String)">
            <summary>
            Creates the specified role for the current application.
            If the group representing the specified role already exists
            it will be associated with the current application if it
            is not currently.  This method will call SetRoleInfo(true) 
            forcing a reload of role information.
            </summary>
            <param name="roleName"></param>
        </member>
        <member name="M:KLGates.Core.Security.Edward.AddUserToRole(KLGates.Core.Security.Application,System.String,System.String,System.Boolean)">
            <summary>
            Add the specified userName (AD login) to the specified roleName.
            Throws RoleNotFoundException if the specified roleName was not 
            found and 'create' is false (default is true).
            </summary>
            <param name="userName">The AD login of the user to add to the role.</param>
            <param name="roleName">The name of the role to add the user to</param>
            <param name="create">If true create the role and associated EDWGroup.  Default is true.</param>
            <exception cref="T:KLGates.Core.Security.RoleNotFoundException"></exception>
        </member>
        <member name="M:KLGates.Core.Security.Edward.AddUserToRole(KLGates.Core.Security.Application,KLGates.Core.Security.Employee,System.String,System.Boolean)">
            <summary>
            Add the specified Employee to the specified roleName.
            Throws RoleNotFoundException if the specified roleName was not 
            found and 'create' is false.
            </summary>
            <param name="userName">The AD login of the user to add to the role.</param>
            <param name="roleName">The name of the role to add the user to</param>
            <param name="create">If true create the role and associated EDWGroup.  Default is true.</param>
            <exception cref="T:KLGates.Core.Security.RoleNotFoundException"></exception>
        </member>
        <member name="M:KLGates.Core.Security.Edward.DeleteRole(KLGates.Core.Security.Application,System.String,System.Boolean)">
            <summary>
            Delete the specified roleName
            </summary>
            <param name="roleName">The name of the role to delete.</param>
            <param name="throwOnPopulatedRole">If true throw an exception if the role has members and don't delete the role.</param>
            <returns>true if the role was deleted false otherwise, returns false if the role doesn't exist.</returns>
        </member>
        <member name="M:KLGates.Core.Security.Edward.AddUsersToRoles(KLGates.Core.Security.Application,System.String[],System.String[])">
            <summary>
            Add the specified usernames to the specified roleNames
            </summary>
            <param name="usernames"></param>
            <param name="roleNames"></param>
        </member>
        <member name="P:KLGates.Core.Security.Edward.RoleNames">
            <summary>
            Gets a copy of all the role names for the current application.
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.Edward.Roles">
            <summary>
            Gets an array of RoleInfo instances for the current application
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.Edward.ApplicationName">
            <summary>
            Gets the name of the current application as defined in the config file 
            by the appSetting with the key of "ApplicationName".
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.Edward.CurrentUser">
            <summary>
            Gets or sets the current user as EDWPrincipal
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.EDWIdentity.Employee">
            <summary>
            Gets the Employee object associated with the 
            OriginalPrincipal
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.EDWIdentity.OriginalPrincipal">
            <summary>
            Represents the original windows principal that was used to hydrate
            the current EDWPrincipal accessible through HttpContext.Current.User
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.EDWPrincipal.Employee">
            <summary>
            Gets the Security.Employee from EDW that represents 
            the current user.  If the current user's identity cannot
            be determined a new Security.Employee instance is 
            returned with the FirstName set to "Unknown" and 
            LastName set to "User".  This is to prevent 
            NullReferenceExceptions.
            </summary>
        </member>
        <member name="T:KLGates.Core.Security.EDWRoleProvider">
            <summary>
            A role provider that uses Edward directly as the implementation.  Not to be
            confused with EdwardClientRoleProvider which uses the Edward web service
            as its backing implementation.
            </summary>
        </member>
        <member name="T:KLGates.Core.Security.Application">
            <summary>
            Encapsulates the 'Application' table
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esApplication.ApplicationID">
            <summary>
            Maps to Application.ApplicationID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esApplication.ApplicationName">
            <summary>
            Maps to Application.ApplicationName
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esApplication.ApplicationDesc">
            <summary>
            Maps to Application.ApplicationDesc
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esApplication.Status">
            <summary>
            Maps to Application.Status
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esApplication.LastModifiedBy">
            <summary>
            Maps to Application.LastModifiedBy
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esApplication.LastModifiedDate">
            <summary>
            Maps to Application.LastModifiedDate
            </summary>
        </member>
        <member name="M:KLGates.Core.Security.Application.SetRoleInfo(System.Boolean)">
            <summary>
            Reloads role information.  This method is called after any
            modficiation to role information (new roles, adds or deletes
            from roles, creation or deletion of roles).  This method will block
            until complete.
            </summary>
            <param name="reload">If true the current Roles dictionary will be nullified,
            re-instantiated and re-populated</param>
        </member>
        <member name="M:KLGates.Core.Security.Application.GetOneByName(System.String)">
            <summary>
            Retrieves the Application with the specified name.  If more than one
            is found a MultipleApplicationsFoundException will be thrown.  If none
            is found an attempt will be made to add it, success or failure will 
            be determined by the credentials used to connect to the database.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:KLGates.Core.Security.Application.GetHierarchicalProperties">
            <summary>
            Used internally by the entity's hierarchical properties.
            </summary>
        </member>
        <member name="M:KLGates.Core.Security.Application.ApplyPostSaveKeys">
            <summary>
            Used internally for retrieving AutoIncrementing keys
            during hierarchical PostSave.
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.Application.Item(System.String)">
            <summary>
            Shortcut to Roles, gets the RoleInfo for the 
            specified roleName or null if it is not found.
            </summary>
            <param name="roleName"></param>
            <returns></returns>
        </member>
        <member name="P:KLGates.Core.Security.Application.ApplicationGroupCollectionByApplicationID">
            <summary>
            Zero to Many
            Foreign Key Name - FK_APPLICATIONGROUP_APPLICATION
            </summary>
        </member>
        <member name="T:KLGates.Core.Security.ApplicationGroup">
            <summary>
            Encapsulates the 'ApplicationGroup' table
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esApplicationGroup.ApplicationGroupID">
            <summary>
            Maps to ApplicationGroup.ApplicationGroupID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esApplicationGroup.ApplicationID">
            <summary>
            Maps to ApplicationGroup.ApplicationID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esApplicationGroup.EDWGroupID">
            <summary>
            Maps to ApplicationGroup.EDWGroupID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esApplicationGroup.Status">
            <summary>
            Maps to ApplicationGroup.Status
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esApplicationGroup.LastModifiedBy">
            <summary>
            Maps to ApplicationGroup.LastModifiedBy
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esApplicationGroup.LastModifiedDate">
            <summary>
            Maps to ApplicationGroup.LastModifiedDate
            </summary>
        </member>
        <member name="M:KLGates.Core.Security.ApplicationGroup.ApplyPreSaveKeys">
            <summary>
            Used internally for retrieving AutoIncrementing keys
            during hierarchical PreSave.
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.ApplicationGroup.UpToApplicationByApplicationID">
            <summary>
            Many to One
            Foreign Key Name - FK_APPLICATIONGROUP_APPLICATION
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.ApplicationGroup.UpToEDWGroupByEDWGroupID">
            <summary>
            Many to One
            Foreign Key Name - FK_ApplicationGroup_EDWGroup
            </summary>
        </member>
        <member name="T:KLGates.Core.Security.Domain">
            <summary>
            Encapsulates the 'Domain' table
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esDomain.DomainID">
            <summary>
            Maps to Domain.DomainID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esDomain.DomainName">
            <summary>
            Maps to Domain.DomainName
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esDomain.DomainDesc">
            <summary>
            Maps to Domain.DomainDesc
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esDomain.IsIntranetDomain">
            <summary>
            Maps to Domain.isIntranetDomain
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esDomain.Status">
            <summary>
            Maps to Domain.Status
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esDomain.LastModifiedBy">
            <summary>
            Maps to Domain.LastModifiedBy
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esDomain.LastModifiedDate">
            <summary>
            Maps to Domain.LastModifiedDate
            </summary>
        </member>
        <member name="T:KLGates.Core.Security.EDWGroup">
            <summary>
            Encapsulates the 'EDWGroup' table
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEDWGroup.EDWGroupID">
            <summary>
            Maps to EDWGroup.EDWGroupID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEDWGroup.EDWGroupTypeID">
            <summary>
            Maps to EDWGroup.EDWGroupTypeID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEDWGroup.EDWGroupCode">
            <summary>
            Maps to EDWGroup.EDWGroupCode
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEDWGroup.EDWGroupName">
            <summary>
            Maps to EDWGroup.EDWGroupName
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEDWGroup.EDWGroupDesc">
            <summary>
            Maps to EDWGroup.EDWGroupDesc
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEDWGroup.ADGroupName">
            <summary>
            Maps to EDWGroup.ADGroupName
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEDWGroup.ADSyncFlag">
            <summary>
            Maps to EDWGroup.ADSyncFlag
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEDWGroup.Status">
            <summary>
            Maps to EDWGroup.Status
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEDWGroup.Comments">
            <summary>
            Maps to EDWGroup.Comments
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEDWGroup.LastModifiedBy">
            <summary>
            Maps to EDWGroup.LastModifiedBy
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEDWGroup.LastModifiedDate">
            <summary>
            Maps to EDWGroup.LastModifiedDate
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEDWGroup.CreatedDate">
            <summary>
            Maps to EDWGroup.CreatedDate
            </summary>
        </member>
        <member name="M:KLGates.Core.Security.EDWGroup.GetOneApplicationSecurityGroupNamed(System.String)">
            <summary>
            Retrieves the group with the specified name, if it doesn't
            exist it will be created.
            </summary>
            <param name="groupName">The name of the group</param>
            <returns>EDWGroup</returns>
        </member>
        <member name="M:KLGates.Core.Security.EDWGroup.Delete">
            <summary>
            Deletes all the associated definition rules and the group
            itself.
            </summary>
        </member>
        <member name="M:KLGates.Core.Security.EDWGroup.CreateApplicationSecurityGroup(System.String)">
            <summary>
            Create an EDWGroup with the specified groupName
            </summary>
            <param name="groupName">The name of the group</param>
            <returns>EDWGroup</returns>
        </member>
        <member name="M:KLGates.Core.Security.EDWGroup.LoadOneByName(System.String)">
            <summary>
            Retrieves the EDWGroup with the specified name, if no
            group with the specified name exists null is returned.
            If more than one EDWGroup is found with the specified
            name a MultipleGroupsFoundException will be thrown.
            </summary>
            <param name="groupName"></param>
            <returns></returns>
        </member>
        <member name="M:KLGates.Core.Security.EDWGroup.GetHierarchicalProperties">
            <summary>
            Used internally by the entity's hierarchical properties.
            </summary>
        </member>
        <member name="M:KLGates.Core.Security.EDWGroup.ApplyPostSaveKeys">
            <summary>
            Used internally for retrieving AutoIncrementing keys
            during hierarchical PostSave.
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.EDWGroup.ApplicationGroupCollectionByEDWGroupID">
            <summary>
            Zero to Many
            Foreign Key Name - FK_ApplicationGroup_EDWGroup
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.EDWGroup.GroupListDepartmentCollectionByEDWGroupID">
            <summary>
            Zero to Many
            Foreign Key Name - FK_GroupListDepartment_EDWGroup
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.EDWGroup.GroupListEmployeeCollectionByEDWGroupID">
            <summary>
            Zero to Many
            Foreign Key Name - FK_GroupListEmployee_EDWGroup
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.EDWGroup.GroupListExternalPracticeGroupCollectionByEDWGroupID">
            <summary>
            Zero to Many
            Foreign Key Name - FK_GroupListExternalPracticeGroup_EDWGroup
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.EDWGroup.GroupListGroupCollectionByEDWGroupID">
            <summary>
            Zero to Many
            Foreign Key Name - FK_GroupListGroup_EDWGroup
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.EDWGroup.GroupListInternalPracticeGroupCollectionByEDWGroupID">
            <summary>
            Zero to Many
            Foreign Key Name - FK_GroupListInternalPracticeGroup_EDWGroup
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.EDWGroup.GroupListJobcodeCollectionByEDWGroupID">
            <summary>
            Zero to Many
            Foreign Key Name - FK_GroupListJobcode_EDWGroup
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.EDWGroup.GroupListOfficeCollectionByEDWGroupID">
            <summary>
            Zero to Many
            Foreign Key Name - FK_GroupListOffice_EDWGroup
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.EDWGroup.GroupListOfficeLocationCollectionByEDWGroupID">
            <summary>
            Zero to Many
            Foreign Key Name - FK_GroupListOfficeLocation_EDWGroup
            </summary>
        </member>
        <member name="T:KLGates.Core.Security.Employee">
            <summary>
            Encapsulates the 'Employee' table
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployee.EmployeeID">
            <summary>
            Maps to Employee.EmployeeID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployee.EmployeeSourceID">
            <summary>
            Maps to Employee.EmployeeSourceID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployee.EmployeeSourceTypeID">
            <summary>
            Maps to Employee.EmployeeSourceTypeID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployee.EmployeeTypeID">
            <summary>
            Maps to Employee.EmployeeTypeID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployee.LoginName">
            <summary>
            Maps to Employee.LoginName
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployee.LastName">
            <summary>
            Maps to Employee.LastName
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployee.FirstName">
            <summary>
            Maps to Employee.FirstName
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployee.MiddleName">
            <summary>
            Maps to Employee.MiddleName
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployee.SuffixID">
            <summary>
            Maps to Employee.SuffixID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployee.DisplayName">
            <summary>
            Maps to Employee.DisplayName
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployee.PayrollName">
            <summary>
            Maps to Employee.PayrollName
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployee.NickName">
            <summary>
            Maps to Employee.NickName
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployee.Comment">
            <summary>
            Maps to Employee.Comment
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployee.Gender">
            <summary>
            Maps to Employee.Gender
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployee.BirthDate">
            <summary>
            Maps to Employee.BirthDate
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployee.BirthPlace">
            <summary>
            Maps to Employee.BirthPlace
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployee.BirthState">
            <summary>
            Maps to Employee.BirthState
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployee.BirthCountry">
            <summary>
            Maps to Employee.BirthCountry
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployee.HomeAddress1">
            <summary>
            Maps to Employee.HomeAddress1
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployee.HomeAddress2">
            <summary>
            Maps to Employee.HomeAddress2
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployee.HomeAddress3">
            <summary>
            Maps to Employee.HomeAddress3
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployee.HomeAddress4">
            <summary>
            Maps to Employee.HomeAddress4
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployee.City">
            <summary>
            Maps to Employee.City
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployee.State">
            <summary>
            Maps to Employee.State
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployee.ZipCode">
            <summary>
            Maps to Employee.ZipCode
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployee.CountryID">
            <summary>
            Maps to Employee.CountryID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployee.DepartmentID">
            <summary>
            Maps to Employee.DepartmentID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployee.HireDate">
            <summary>
            Maps to Employee.HireDate
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployee.TerminationDate">
            <summary>
            Maps to Employee.TerminationDate
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployee.EmployeeStatusID">
            <summary>
            Maps to Employee.EmployeeStatusID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployee.JobCodeID">
            <summary>
            Maps to Employee.JobCodeID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployee.JobFunctionCode">
            <summary>
            Maps to Employee.JobFunctionCode
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployee.AccountingCode">
            <summary>
            Maps to Employee.AccountingCode
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployee.SpouseName">
            <summary>
            Maps to Employee.SpouseName
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployee.StdWorkHours">
            <summary>
            Maps to Employee.StdWorkHours
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployee.DomainID">
            <summary>
            Maps to Employee.DomainID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployee.ExtranetDomainID">
            <summary>
            Maps to Employee.ExtranetDomainID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployee.ExtranetUserName">
            <summary>
            Maps to Employee.ExtranetUserName
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployee.IsDisplayedInternal">
            <summary>
            Maps to Employee.isDisplayedInternal
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployee.IsDisplayedExternal">
            <summary>
            Maps to Employee.isDisplayedExternal
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployee.IsTimekeeper">
            <summary>
            Maps to Employee.isTimekeeper
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployee.IsUpdateable">
            <summary>
            Maps to Employee.isUpdateable
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployee.IsCPRAED">
            <summary>
            Maps to Employee.isCPRAED
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployee.IsNotary">
            <summary>
            Maps to Employee.isNotary
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployee.IsPhotoDisplayedInternal">
            <summary>
            Maps to Employee.isPhotoDisplayedInternal
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployee.IsPhotoDisplayedExternal">
            <summary>
            Maps to Employee.isPhotoDisplayedExternal
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployee.ClassYear">
            <summary>
            Maps to Employee.ClassYear
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployee.SystemDate">
            <summary>
            Maps to Employee.SystemDate
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployee.LastModifiedBy">
            <summary>
            Maps to Employee.LastModifiedBy
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployee.LastModifiedDate">
            <summary>
            Maps to Employee.LastModifiedDate
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployee.RecordDate">
            <summary>
            Maps to Employee.RecordDate
            </summary>
        </member>
        <member name="M:KLGates.Core.Security.Employee.GetEmployeeByLogin(System.String,System.String,System.String)">
            <summary>
            Returns an Employee object by their login.  Returns null if 
            the Employee is not found.
            </summary>
            <param name="loginName"></param>
            <returns></returns>
        </member>
        <member name="M:KLGates.Core.Security.Employee.GetFormattedName">
            <summary>
            Returns the employee name in the format [First] [Middle] [Last]
            using only a single space if the middle name is blank.
            </summary>
            <returns></returns>
        </member>
        <member name="M:KLGates.Core.Security.Employee.GetHierarchicalProperties">
            <summary>
            Used internally by the entity's hierarchical properties.
            </summary>
        </member>
        <member name="M:KLGates.Core.Security.Employee.ApplyPostSaveKeys">
            <summary>
            Used internally for retrieving AutoIncrementing keys
            during hierarchical PostSave.
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.Employee.UpToDomainByDomainID">
            <summary>
            Custom implementation.  Not generated by EntitySpaces
            due to missing Foreign Key definition.
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.Employee.EmployeeEmailCollectionByEmployeeID">
            <summary>
            Zero to Many
            Foreign Key Name - FK_EmployeeEmail_Employee
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.Employee.EmployeeIdentifierCollectionByEmployeeID">
            <summary>
            Zero to Many
            Foreign Key Name - FK1_EmployeeIdentifier
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.Employee.EmployeeOfficeLocationCollectionByEmployeeID">
            <summary>
            Zero to Many
            Foreign Key Name - FK_EmployeeOfficeLocation_Employee
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.Employee.GroupListEmployeeCollectionByEmployeeID">
            <summary>
            Zero to Many
            Foreign Key Name - FK_GroupListEmployee_Employee
            </summary>
        </member>
        <member name="T:KLGates.Core.Security.EmployeeEmail">
            <summary>
            Encapsulates the 'EmployeeEmail' table
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployeeEmail.EmployeeEmailID">
            <summary>
            Maps to EmployeeEmail.EmployeeEmailID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployeeEmail.EmployeeID">
            <summary>
            Maps to EmployeeEmail.EmployeeID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployeeEmail.EmailtypeID">
            <summary>
            Maps to EmployeeEmail.EmailtypeID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployeeEmail.EmailAddress">
            <summary>
            Maps to EmployeeEmail.EmailAddress
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployeeEmail.IsPrimary">
            <summary>
            Maps to EmployeeEmail.isPrimary
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployeeEmail.LastModifiedBy">
            <summary>
            Maps to EmployeeEmail.LastModifiedBy
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployeeEmail.LastModifiedDate">
            <summary>
            Maps to EmployeeEmail.LastModifiedDate
            </summary>
        </member>
        <member name="M:KLGates.Core.Security.EmployeeEmail.ApplyPreSaveKeys">
            <summary>
            Used internally for retrieving AutoIncrementing keys
            during hierarchical PreSave.
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.EmployeeEmail.UpToEmployeeByEmployeeID">
            <summary>
            Many to One
            Foreign Key Name - FK_EmployeeEmail_Employee
            </summary>
        </member>
        <member name="T:KLGates.Core.Security.EmployeeIdentifier">
            <summary>
            Encapsulates the 'EmployeeIdentifier' table
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployeeIdentifier.EmployeeIdentifierId">
            <summary>
            Maps to EmployeeIdentifier.EmployeeIdentifierId
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployeeIdentifier.EmployeeID">
            <summary>
            Maps to EmployeeIdentifier.EmployeeID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployeeIdentifier.EmployeeSourceTypeID">
            <summary>
            Maps to EmployeeIdentifier.EmployeeSourceTypeID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployeeIdentifier.EmployeeSourceID">
            <summary>
            Maps to EmployeeIdentifier.EmployeeSourceID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployeeIdentifier.LastModifiedBy">
            <summary>
            Maps to EmployeeIdentifier.LastModifiedBy
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployeeIdentifier.LastModifiedDate">
            <summary>
            Maps to EmployeeIdentifier.LastModifiedDate
            </summary>
        </member>
        <member name="M:KLGates.Core.Security.EmployeeIdentifier.ApplyPreSaveKeys">
            <summary>
            Used internally for retrieving AutoIncrementing keys
            during hierarchical PreSave.
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.EmployeeIdentifier.UpToEmployeeByEmployeeID">
            <summary>
            Many to One
            Foreign Key Name - FK1_EmployeeIdentifier
            </summary>
        </member>
        <member name="T:KLGates.Core.Security.EmployeeOfficeLocation">
            <summary>
            Encapsulates the 'EmployeeOfficeLocation' table
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployeeOfficeLocation.EmployeeOfficeLocationID">
            <summary>
            Maps to EmployeeOfficeLocation.EmployeeOfficeLocationID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployeeOfficeLocation.EmployeeID">
            <summary>
            Maps to EmployeeOfficeLocation.EmployeeID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployeeOfficeLocation.LocationFloorID">
            <summary>
            Maps to EmployeeOfficeLocation.LocationFloorID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployeeOfficeLocation.IsPrimary">
            <summary>
            Maps to EmployeeOfficeLocation.isPrimary
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployeeOfficeLocation.IsDisplayedInternal">
            <summary>
            Maps to EmployeeOfficeLocation.isDisplayedInternal
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployeeOfficeLocation.IsDisplayedExternal">
            <summary>
            Maps to EmployeeOfficeLocation.isDisplayedExternal
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployeeOfficeLocation.LastModifiedBy">
            <summary>
            Maps to EmployeeOfficeLocation.LastModifiedBy
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployeeOfficeLocation.LastModifiedDate">
            <summary>
            Maps to EmployeeOfficeLocation.LastModifiedDate
            </summary>
        </member>
        <member name="M:KLGates.Core.Security.EmployeeOfficeLocation.ApplyPreSaveKeys">
            <summary>
            Used internally for retrieving AutoIncrementing keys
            during hierarchical PreSave.
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.EmployeeOfficeLocation.UpToEmployeeByEmployeeID">
            <summary>
            Many to One
            Foreign Key Name - FK_EmployeeOfficeLocation_Employee
            </summary>
        </member>
        <member name="T:KLGates.Core.Security.EmployeeOfficeLocationHistory">
            <summary>
            Encapsulates the 'EmployeeOfficeLocationHistory' table
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployeeOfficeLocationHistory.EmployeeOfficeLocationHistoryID">
            <summary>
            Maps to EmployeeOfficeLocationHistory.EmployeeOfficeLocationHistoryID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployeeOfficeLocationHistory.EmployeeOfficeLocationID">
            <summary>
            Maps to EmployeeOfficeLocationHistory.EmployeeOfficeLocationID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployeeOfficeLocationHistory.EmployeeID">
            <summary>
            Maps to EmployeeOfficeLocationHistory.EmployeeID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployeeOfficeLocationHistory.LocationFloorID">
            <summary>
            Maps to EmployeeOfficeLocationHistory.LocationFloorID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployeeOfficeLocationHistory.IsPrimary">
            <summary>
            Maps to EmployeeOfficeLocationHistory.isPrimary
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployeeOfficeLocationHistory.IsDisplayedInternal">
            <summary>
            Maps to EmployeeOfficeLocationHistory.isDisplayedInternal
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployeeOfficeLocationHistory.IsDisplayedExternal">
            <summary>
            Maps to EmployeeOfficeLocationHistory.isDisplayedExternal
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployeeOfficeLocationHistory.LastModifiedBy">
            <summary>
            Maps to EmployeeOfficeLocationHistory.LastModifiedBy
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployeeOfficeLocationHistory.LastModifiedDate">
            <summary>
            Maps to EmployeeOfficeLocationHistory.LastModifiedDate
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployeeOfficeLocationHistory.RecordUser">
            <summary>
            Maps to EmployeeOfficeLocationHistory.RecordUser
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esEmployeeOfficeLocationHistory.RecordDate">
            <summary>
            Maps to EmployeeOfficeLocationHistory.RecordDate
            </summary>
        </member>
        <member name="T:KLGates.Core.Security.GroupListDepartment">
            <summary>
            Encapsulates the 'GroupListDepartment' table
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListDepartment.GroupListDepartmentID">
            <summary>
            Maps to GroupListDepartment.GroupListDepartmentID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListDepartment.EDWGroupID">
            <summary>
            Maps to GroupListDepartment.EDWGroupID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListDepartment.DepartmentID">
            <summary>
            Maps to GroupListDepartment.DepartmentID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListDepartment.CollectionFilterID">
            <summary>
            Maps to GroupListDepartment.CollectionFilterID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListDepartment.LastModifiedBy">
            <summary>
            Maps to GroupListDepartment.LastModifiedBy
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListDepartment.LastModifiedDate">
            <summary>
            Maps to GroupListDepartment.LastModifiedDate
            </summary>
        </member>
        <member name="M:KLGates.Core.Security.GroupListDepartment.ApplyPreSaveKeys">
            <summary>
            Used internally for retrieving AutoIncrementing keys
            during hierarchical PreSave.
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.GroupListDepartment.UpToEDWGroupByEDWGroupID">
            <summary>
            Many to One
            Foreign Key Name - FK_GroupListDepartment_EDWGroup
            </summary>
        </member>
        <member name="T:KLGates.Core.Security.GroupListEmployee">
            <summary>
            Encapsulates the 'GroupListEmployee' table
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListEmployee.GroupListEmployeeID">
            <summary>
            Maps to GroupListEmployee.GroupListEmployeeID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListEmployee.EDWGroupID">
            <summary>
            Maps to GroupListEmployee.EDWGroupID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListEmployee.EmployeeID">
            <summary>
            Maps to GroupListEmployee.EmployeeID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListEmployee.CollectionFilterID">
            <summary>
            Maps to GroupListEmployee.CollectionFilterID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListEmployee.LastModifiedBy">
            <summary>
            Maps to GroupListEmployee.LastModifiedBy
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListEmployee.LastModifiedDate">
            <summary>
            Maps to GroupListEmployee.LastModifiedDate
            </summary>
        </member>
        <member name="M:KLGates.Core.Security.GroupListEmployee.ExecuteQuery(System.Action{KLGates.Core.Security.GroupListEmployeeQuery})">
            <summary>
            
            </summary>
            <param name="queryBuilder"></param>
            <returns></returns>
        </member>
        <member name="M:KLGates.Core.Security.GroupListEmployee.ApplyPreSaveKeys">
            <summary>
            Used internally for retrieving AutoIncrementing keys
            during hierarchical PreSave.
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.GroupListEmployee.UpToEDWGroupByEDWGroupID">
            <summary>
            Many to One
            Foreign Key Name - FK_GroupListEmployee_EDWGroup
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.GroupListEmployee.UpToEmployeeByEmployeeID">
            <summary>
            Many to One
            Foreign Key Name - FK_GroupListEmployee_Employee
            </summary>
        </member>
        <member name="T:KLGates.Core.Security.GroupListExternalPracticeGroup">
            <summary>
            Encapsulates the 'GroupListExternalPracticeGroup' table
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListExternalPracticeGroup.GroupListExternalPracticeGroupID">
            <summary>
            Maps to GroupListExternalPracticeGroup.GroupListExternalPracticeGroupID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListExternalPracticeGroup.EDWGroupID">
            <summary>
            Maps to GroupListExternalPracticeGroup.EDWGroupID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListExternalPracticeGroup.ExternalPracticeGroupID">
            <summary>
            Maps to GroupListExternalPracticeGroup.ExternalPracticeGroupID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListExternalPracticeGroup.AffiliationTypeID">
            <summary>
            Maps to GroupListExternalPracticeGroup.AffiliationTypeID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListExternalPracticeGroup.CollectionFilterID">
            <summary>
            Maps to GroupListExternalPracticeGroup.CollectionFilterID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListExternalPracticeGroup.LastModifiedBy">
            <summary>
            Maps to GroupListExternalPracticeGroup.LastModifiedBy
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListExternalPracticeGroup.LastModifiedDate">
            <summary>
            Maps to GroupListExternalPracticeGroup.LastModifiedDate
            </summary>
        </member>
        <member name="M:KLGates.Core.Security.GroupListExternalPracticeGroup.ApplyPreSaveKeys">
            <summary>
            Used internally for retrieving AutoIncrementing keys
            during hierarchical PreSave.
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.GroupListExternalPracticeGroup.UpToEDWGroupByEDWGroupID">
            <summary>
            Many to One
            Foreign Key Name - FK_GroupListExternalPracticeGroup_EDWGroup
            </summary>
        </member>
        <member name="T:KLGates.Core.Security.GroupListGender">
            <summary>
            Encapsulates the 'GroupListGender' table
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListGender.GroupListGenderID">
            <summary>
            Maps to GroupListGender.GroupListGenderID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListGender.EDWGroupID">
            <summary>
            Maps to GroupListGender.EDWGroupID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListGender.Gender">
            <summary>
            Maps to GroupListGender.Gender
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListGender.CollectionFilterID">
            <summary>
            Maps to GroupListGender.CollectionFilterID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListGender.LastModifiedBy">
            <summary>
            Maps to GroupListGender.LastModifiedBy
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListGender.LastModifiedDate">
            <summary>
            Maps to GroupListGender.LastModifiedDate
            </summary>
        </member>
        <member name="T:KLGates.Core.Security.GroupListGroup">
            <summary>
            Encapsulates the 'GroupListGroup' table
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListGroup.GroupListGroupID">
            <summary>
            Maps to GroupListGroup.GroupListGroupID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListGroup.EDWGroupID">
            <summary>
            Maps to GroupListGroup.EDWGroupID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListGroup.SubGroupListID">
            <summary>
            Maps to GroupListGroup.SubGroupListID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListGroup.CollectionFilterID">
            <summary>
            Maps to GroupListGroup.CollectionFilterID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListGroup.LastModifiedBy">
            <summary>
            Maps to GroupListGroup.LastModifiedBy
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListGroup.LastModifiedDate">
            <summary>
            Maps to GroupListGroup.LastModifiedDate
            </summary>
        </member>
        <member name="M:KLGates.Core.Security.GroupListGroup.ApplyPreSaveKeys">
            <summary>
            Used internally for retrieving AutoIncrementing keys
            during hierarchical PreSave.
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.GroupListGroup.UpToEDWGroupByEDWGroupID">
            <summary>
            Many to One
            Foreign Key Name - FK_GroupListGroup_EDWGroup
            </summary>
        </member>
        <member name="T:KLGates.Core.Security.GroupListInternalPracticeGroup">
            <summary>
            Encapsulates the 'GroupListInternalPracticeGroup' table
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListInternalPracticeGroup.GroupListInternalPracticeGroupID">
            <summary>
            Maps to GroupListInternalPracticeGroup.GroupListInternalPracticeGroupID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListInternalPracticeGroup.EDWGroupID">
            <summary>
            Maps to GroupListInternalPracticeGroup.EDWGroupID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListInternalPracticeGroup.InternalPracticeGroupID">
            <summary>
            Maps to GroupListInternalPracticeGroup.InternalPracticeGroupID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListInternalPracticeGroup.CollectionFilterID">
            <summary>
            Maps to GroupListInternalPracticeGroup.CollectionFilterID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListInternalPracticeGroup.LastModifiedBy">
            <summary>
            Maps to GroupListInternalPracticeGroup.LastModifiedBy
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListInternalPracticeGroup.LastModifiedDate">
            <summary>
            Maps to GroupListInternalPracticeGroup.LastModifiedDate
            </summary>
        </member>
        <member name="M:KLGates.Core.Security.GroupListInternalPracticeGroup.ApplyPreSaveKeys">
            <summary>
            Used internally for retrieving AutoIncrementing keys
            during hierarchical PreSave.
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.GroupListInternalPracticeGroup.UpToEDWGroupByEDWGroupID">
            <summary>
            Many to One
            Foreign Key Name - FK_GroupListInternalPracticeGroup_EDWGroup
            </summary>
        </member>
        <member name="T:KLGates.Core.Security.GroupListJobcode">
            <summary>
            Encapsulates the 'GroupListJobcode' table
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListJobcode.GroupListJobcodeID">
            <summary>
            Maps to GroupListJobcode.GroupListJobcodeID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListJobcode.EDWGroupID">
            <summary>
            Maps to GroupListJobcode.EDWGroupID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListJobcode.JobcodeID">
            <summary>
            Maps to GroupListJobcode.JobcodeID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListJobcode.CollectionFilterID">
            <summary>
            Maps to GroupListJobcode.CollectionFilterID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListJobcode.LastModifiedBy">
            <summary>
            Maps to GroupListJobcode.LastModifiedBy
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListJobcode.LastModifiedDate">
            <summary>
            Maps to GroupListJobcode.LastModifiedDate
            </summary>
        </member>
        <member name="M:KLGates.Core.Security.GroupListJobcode.ApplyPreSaveKeys">
            <summary>
            Used internally for retrieving AutoIncrementing keys
            during hierarchical PreSave.
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.GroupListJobcode.UpToEDWGroupByEDWGroupID">
            <summary>
            Many to One
            Foreign Key Name - FK_GroupListJobcode_EDWGroup
            </summary>
        </member>
        <member name="T:KLGates.Core.Security.GroupListOffice">
            <summary>
            Encapsulates the 'GroupListOffice' table
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListOffice.GroupListOfficeID">
            <summary>
            Maps to GroupListOffice.GroupListOfficeID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListOffice.EDWGroupID">
            <summary>
            Maps to GroupListOffice.EDWGroupID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListOffice.OfficeID">
            <summary>
            Maps to GroupListOffice.OfficeID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListOffice.CollectionFilterID">
            <summary>
            Maps to GroupListOffice.CollectionFilterID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListOffice.LastModifiedBy">
            <summary>
            Maps to GroupListOffice.LastModifiedBy
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListOffice.LastModifiedDate">
            <summary>
            Maps to GroupListOffice.LastModifiedDate
            </summary>
        </member>
        <member name="M:KLGates.Core.Security.GroupListOffice.ApplyPreSaveKeys">
            <summary>
            Used internally for retrieving AutoIncrementing keys
            during hierarchical PreSave.
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.GroupListOffice.UpToEDWGroupByEDWGroupID">
            <summary>
            Many to One
            Foreign Key Name - FK_GroupListOffice_EDWGroup
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.GroupListOffice.UpToOfficeByOfficeID">
            <summary>
            Many to One
            Foreign Key Name - FK_GroupListOffice_Office
            </summary>
        </member>
        <member name="T:KLGates.Core.Security.GroupListOfficeLocation">
            <summary>
            Encapsulates the 'GroupListOfficeLocation' table
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListOfficeLocation.GroupListOfficeLocationID">
            <summary>
            Maps to GroupListOfficeLocation.GroupListOfficeLocationID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListOfficeLocation.EDWGroupID">
            <summary>
            Maps to GroupListOfficeLocation.EDWGroupID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListOfficeLocation.OfficeLocationID">
            <summary>
            Maps to GroupListOfficeLocation.OfficeLocationID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListOfficeLocation.LocationFloorID">
            <summary>
            Maps to GroupListOfficeLocation.LocationFloorID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListOfficeLocation.CollectionFilterID">
            <summary>
            Maps to GroupListOfficeLocation.CollectionFilterID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListOfficeLocation.LastModifiedby">
            <summary>
            Maps to GroupListOfficeLocation.LastModifiedby
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListOfficeLocation.LastModifiedDate">
            <summary>
            Maps to GroupListOfficeLocation.LastModifiedDate
            </summary>
        </member>
        <member name="M:KLGates.Core.Security.GroupListOfficeLocation.ApplyPreSaveKeys">
            <summary>
            Used internally for retrieving AutoIncrementing keys
            during hierarchical PreSave.
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.GroupListOfficeLocation.UpToEDWGroupByEDWGroupID">
            <summary>
            Many to One
            Foreign Key Name - FK_GroupListOfficeLocation_EDWGroup
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.GroupListOfficeLocation.UpToOfficeLocationByOfficeLocationID">
            <summary>
            Many to One
            Foreign Key Name - FK_GroupListOfficeLocation_OfficeLocation
            </summary>
        </member>
        <member name="T:KLGates.Core.Security.GroupListPracticeArea">
            <summary>
            Encapsulates the 'GroupListPracticeArea' table
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListPracticeArea.GroupListPracticeAreaID">
            <summary>
            Maps to GroupListPracticeArea.GroupListPracticeAreaID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListPracticeArea.EDWGroupID">
            <summary>
            Maps to GroupListPracticeArea.EDWGroupID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListPracticeArea.PracticeAreaID">
            <summary>
            Maps to GroupListPracticeArea.PracticeAreaID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListPracticeArea.CollectionFilterID">
            <summary>
            Maps to GroupListPracticeArea.CollectionFilterID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListPracticeArea.LastModifiedBy">
            <summary>
            Maps to GroupListPracticeArea.LastModifiedBy
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esGroupListPracticeArea.LastModifiedDate">
            <summary>
            Maps to GroupListPracticeArea.LastModifiedDate
            </summary>
        </member>
        <member name="T:KLGates.Core.Security.LocationFloor">
            <summary>
            Encapsulates the 'LocationFloor' table
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esLocationFloor.LocationFloorID">
            <summary>
            Maps to LocationFloor.LocationFloorID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esLocationFloor.OfficeLocationID">
            <summary>
            Maps to LocationFloor.OfficeLocationID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esLocationFloor.FloorName">
            <summary>
            Maps to LocationFloor.FloorName
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esLocationFloor.FloorDesc">
            <summary>
            Maps to LocationFloor.FloorDesc
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esLocationFloor.Status">
            <summary>
            Maps to LocationFloor.Status
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esLocationFloor.LastModifiedBy">
            <summary>
            Maps to LocationFloor.LastModifiedBy
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esLocationFloor.LastModifiedDate">
            <summary>
            Maps to LocationFloor.LastModifiedDate
            </summary>
        </member>
        <member name="M:KLGates.Core.Security.LocationFloor.ApplyPreSaveKeys">
            <summary>
            Used internally for retrieving AutoIncrementing keys
            during hierarchical PreSave.
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.LocationFloor.UpToOfficeLocationByOfficeLocationID">
            <summary>
            Many to One
            Foreign Key Name - FK_LocationFloor_OfficeLocation
            </summary>
        </member>
        <member name="T:KLGates.Core.Security.Office">
            <summary>
            Encapsulates the 'Office' table
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esOffice.OfficeID">
            <summary>
            Maps to Office.OfficeID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esOffice.AccountingOfficeCode">
            <summary>
            Maps to Office.AccountingOfficeCode
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esOffice.HROfficeCode">
            <summary>
            Maps to Office.HROfficeCode
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esOffice.OfficeName">
            <summary>
            Maps to Office.OfficeName
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esOffice.OfficeDesc">
            <summary>
            Maps to Office.OfficeDesc
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esOffice.OfficeAlphaCode">
            <summary>
            Maps to Office.OfficeAlphaCode
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esOffice.OfficeTollFreeNumber">
            <summary>
            Maps to Office.OfficeTollFreeNumber
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esOffice.OfficeVoicemailNumber">
            <summary>
            Maps to Office.OfficeVoicemailNumber
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esOffice.Status">
            <summary>
            Maps to Office.Status
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esOffice.LastModifiedBy">
            <summary>
            Maps to Office.LastModifiedBy
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esOffice.LastModifiedDate">
            <summary>
            Maps to Office.LastModifiedDate
            </summary>
        </member>
        <member name="M:KLGates.Core.Security.Office.GetHierarchicalProperties">
            <summary>
            Used internally by the entity's hierarchical properties.
            </summary>
        </member>
        <member name="M:KLGates.Core.Security.Office.ApplyPostSaveKeys">
            <summary>
            Used internally for retrieving AutoIncrementing keys
            during hierarchical PostSave.
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.Office.GroupListOfficeCollectionByOfficeID">
            <summary>
            Zero to Many
            Foreign Key Name - FK_GroupListOffice_Office
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.Office.OfficeLocationCollectionByOfficeID">
            <summary>
            Zero to Many
            Foreign Key Name - RefOffice461
            </summary>
        </member>
        <member name="T:KLGates.Core.Security.OfficeLocation">
            <summary>
            Encapsulates the 'OfficeLocation' table
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esOfficeLocation.OfficeLocationID">
            <summary>
            Maps to OfficeLocation.OfficeLocationID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esOfficeLocation.OfficeID">
            <summary>
            Maps to OfficeLocation.OfficeID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esOfficeLocation.OfficeLocationName">
            <summary>
            Maps to OfficeLocation.OfficeLocationName
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esOfficeLocation.OfficeLocationDesc">
            <summary>
            Maps to OfficeLocation.OfficeLocationDesc
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esOfficeLocation.OfficeAddress1">
            <summary>
            Maps to OfficeLocation.OfficeAddress1
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esOfficeLocation.OfficeAddress2">
            <summary>
            Maps to OfficeLocation.OfficeAddress2
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esOfficeLocation.City">
            <summary>
            Maps to OfficeLocation.City
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esOfficeLocation.State">
            <summary>
            Maps to OfficeLocation.State
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esOfficeLocation.ZipCode">
            <summary>
            Maps to OfficeLocation.ZipCode
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esOfficeLocation.CountryID">
            <summary>
            Maps to OfficeLocation.CountryID
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esOfficeLocation.PhoneNumber">
            <summary>
            Maps to OfficeLocation.PhoneNumber
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esOfficeLocation.FaxNumber">
            <summary>
            Maps to OfficeLocation.FaxNumber
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esOfficeLocation.Status">
            <summary>
            Maps to OfficeLocation.Status
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esOfficeLocation.IsPrimaryLocation">
            <summary>
            Maps to OfficeLocation.isPrimaryLocation
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esOfficeLocation.LastModifiedBy">
            <summary>
            Maps to OfficeLocation.LastModifiedBy
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.esOfficeLocation.LastModifiedDate">
            <summary>
            Maps to OfficeLocation.LastModifiedDate
            </summary>
        </member>
        <member name="M:KLGates.Core.Security.OfficeLocation.GetHierarchicalProperties">
            <summary>
            Used internally by the entity's hierarchical properties.
            </summary>
        </member>
        <member name="M:KLGates.Core.Security.OfficeLocation.ApplyPreSaveKeys">
            <summary>
            Used internally for retrieving AutoIncrementing keys
            during hierarchical PreSave.
            </summary>
        </member>
        <member name="M:KLGates.Core.Security.OfficeLocation.ApplyPostSaveKeys">
            <summary>
            Used internally for retrieving AutoIncrementing keys
            during hierarchical PostSave.
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.OfficeLocation.GroupListOfficeLocationCollectionByOfficeLocationID">
            <summary>
            Zero to Many
            Foreign Key Name - FK_GroupListOfficeLocation_OfficeLocation
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.OfficeLocation.LocationFloorCollectionByOfficeLocationID">
            <summary>
            Zero to Many
            Foreign Key Name - FK_LocationFloor_OfficeLocation
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.OfficeLocation.UpToOfficeByOfficeID">
            <summary>
            Many to One
            Foreign Key Name - RefOffice461
            </summary>
        </member>
        <member name="T:KLGates.Core.Security.NamespaceDoc">
            <summary>
            The KLGates.Core.Security namespace contains classes, interfaces and value types used to aide
            in security management, including authorization, authentication and role management.
            </summary>
        </member>
        <member name="T:KLGates.Core.Security.RoleInfo">
            <summary>
            Represents details about a role for the current application.
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.RoleInfo.GroupName">
            <summary>
            Gets the name of the EDW Group that represents
            this role.
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.RoleInfo.RoleName">
            <summary>
            Gets the name of this role.
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.RoleInfo.Application">
            <summary>
            The EDW Application instance associated with 
            this role.
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.RoleInfo.Members">
            <summary>
            A list of the members of this role.
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.RoleInfo.Group">
            <summary>
            The EDWGroup that this role 
            represents.
            </summary>
        </member>
        <member name="T:KLGates.Core.Security.RoleNotFoundException">
            <summary>
            The exception that is thrown if an attempt is made to add a user
            to a role that doesn't exist.
            </summary>
        </member>
        <member name="M:KLGates.Core.Security.RoleNotFoundException.#ctor(System.String)">
            <summary>
            Instantiate a new RoleNotFoundException.
            </summary>
            <param name="roleName"></param>
        </member>
        <member name="P:KLGates.Core.Security.RoleRequired.Redirect">
            <summary>
            The url to redirect to if the current user isn't in 
            one of the required roles.
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.RoleRequired.DeniedAction">
            <summary>
            The name of the action to invoke if the current user isn't
            in one of the required roles.
            </summary>
        </member>
        <member name="P:KLGates.Core.Security.RoleRequired.TargetAction">
            <summary>
            The MethodInfo representing the target action.  Only set
            if the DeniedAction is specified and being executed.
            </summary>
        </member>
        <member name="T:KLGates.Core.SingletonHelper">
            <summary>
            A thread safe utility for setting and getting application
            and session level singletons.
            </summary>
        </member>
        <member name="M:KLGates.Core.SingletonHelper.SetSessionProvider``1(System.Object)">
            <summary>
            Sets the session provider of Type T to the specified concrete instance provider.
            The generic argument T "should" be an interface so different implementations
            can be set and used for testing.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="provider"></param>
        </member>
        <member name="M:KLGates.Core.SingletonHelper.SetSessionProvider``1(System.Object,System.Boolean)">
            <summary>
            Sets the session provider of Type T to the specified concrete instance provider.
            The generic argument T "should" be an interface so different implementations
            can be set and used for testing.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="provider"></param>
        </member>
        <member name="M:KLGates.Core.SingletonHelper.GetSessionProvider``1">
            <summary>
            Gets a provider of the specified type T for the current session.
            </summary>
            <typeparam name="T">The type implemented by the object to return.  This can be an interface an abstract
            class or any type in the inheritance hierarchy of the stored object.</typeparam>
            <returns></returns>
        </member>
        <member name="M:KLGates.Core.SingletonHelper.GetSessionProvider``1(System.Object)">
            <summary>
            Gets a provider of the specified type T for the current session.  If it hasn't been 
            set yet it will be set to the instance provided.  Once set it cannot be set again.
            </summary>
        </member>
        <member name="M:KLGates.Core.SingletonHelper.GetSessionProvider``1(System.Object,System.Boolean)">
            <summary>
            Gets a provider of the specified type T for the current session.  If it hasn't been 
            set yet it will be set to the instance provided.  Once set it can only be set again
            if allowOverWrite is true.
            </summary>
            <typeparam name="T">The type implemented by the object to return.  This can be an interface an abstract
            class or any type in the inheritance hierarchy of the stored object.</typeparam>
            <param name="setToIfNotFound">The instance to set the session provider to if it has not already been set.</param>
            <returns></returns>
        </member>
        <member name="M:KLGates.Core.SingletonHelper.SetApplicationProvider``1(System.Object)">
            <summary>
            Set a singleton instance provider of the generic type T.
            Can only be called once per type T.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="provider"></param>
        </member>
        <member name="M:KLGates.Core.SingletonHelper.SetApplicationProvider``1(System.Object,System.Boolean)">
            <summary>
            Set a singleton instance provider of the generic type T.
            Can only be called again if allowOverwrite is true.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="provider"></param>
            <param name="allowOverwrite"></param>
        </member>
        <member name="M:KLGates.Core.SingletonHelper.ApplicationProviderIsSet``1">
            <summary>
            Returns true if a call has been made to SetApplicatoinProvider using
            the specified generic argument "T".
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:KLGates.Core.SingletonHelper.GetApplicationProvider``1">
            <summary>
            Get a singleton instance provider of the generic type T.  If not 
            currently set it will be set to the object provided.  Once set
            the application provider of the specified type cannot be set to a different
            instance.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:KLGates.Core.SingletonHelper.GetApplicationProvider``1(System.Object)">
            <summary>
            Get a singleton instance provider of the generic type T.  If not 
            currently set it will be set to the object provided.  Once set
            the application provider of the specified type cannot be set to a different
            instance.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="setToIfNotFound"></param>
            <returns></returns>
        </member>
        <member name="M:KLGates.Core.SingletonHelper.GetApplicationSingleton``1">
            <summary>
            Gets a singleton of the specified generic type.  If the singleton
            hasn't been set a new instance will be created using the default constructor.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:KLGates.Core.SingletonHelper.GetSessionSingleton``1">
            <summary>
            Gets a session singleton of the specified type T. 
            Will be instantiated as necessary.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sessionId"></param>
            <returns></returns>
        </member>
        <member name="M:KLGates.Core.SingletonHelper.GetSessionSingleton``1(System.String@)">
            <summary>
            Gets a session singleton of the specified type T. 
            Will be instantiated as necessary.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sessionId"></param>
            <returns></returns>
        </member>
        <member name="M:KLGates.Core.SingletonHelper.AbandonSession">
            <summary>
            Removes objects from the session singleton cache to allow them to be garbage
            collected.  A call to this method should be made on session end.
            </summary>
        </member>
        <member name="T:KLGates.Core.SingletonHelper.ImplementationProviders">
            <summary>
            This class is used internally by the containing SingletonHelper
            </summary>
        </member>
        <member name="T:KLGates.Core.Testing.English.After">
            <summary>
            Convenience entry point into creating and initializing the 
            SetupContext for a test.
            </summary>
        </member>
        <member name="M:KLGates.Core.Testing.English.After.Setup(System.Action{KLGates.Core.Testing.English.SetupContext})">
            <summary>
            Instantiates the SetupContext for a test and passes that
            instance to the specified setup Action delegate.
            </summary>
            <param name="setup"></param>
            <returns></returns>
        </member>
        <member name="T:KLGates.Core.Testing.English.Assertion">
            <summary>
            Represents an assertion made during a test.
            </summary>
        </member>
        <member name="P:KLGates.Core.Testing.English.Assertion.SuccessMessage">
            <summary>
            Gets or sets the partial message to display if the assertion passes.
            </summary>
        </member>
        <member name="P:KLGates.Core.Testing.English.Assertion.Passed">
            <summary>
            Gets or sets a boolean value indicating whether the assertion
            passed.
            </summary>
        </member>
        <member name="P:KLGates.Core.Testing.English.Assertion.FailureMessage">
            <summary>
            Gets or sets the partial failure message to display if the assertion fails.
            </summary>
        </member>
        <member name="T:KLGates.Core.Testing.English.Because">
            <summary>
            Provides a mechanism by which assertions are tracked for a test.
            </summary>
        </member>
        <member name="M:KLGates.Core.Testing.English.Because.ObjectUnderTest``1">
            <summary>
            Gets the object under test from the underlying SetupContext.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:KLGates.Core.Testing.English.Because.ItsTrue(System.String,System.Boolean,System.String)">
            <summary>
            Asserts that the specified value is true
            </summary>
            <param name="descriptionOfTrueAssertion">A description of the true value.  Read as:  ItsTrue "Michael Jordan is the best of all time"</param>
            <param name="shouldBeTrue"></param>
            <param name="failureMessage"></param>
        </member>
        <member name="M:KLGates.Core.Testing.English.Because.ItsFalse(System.String,System.Boolean,System.String)">
            <summary>
            Asserts that the specified value is false
            </summary>
            <param name="descriptionOfFalseAssertion">A descriptioni of the false value.  Read as: ItsFalse "John Stockton was the " </param>
            <param name="shouldBeFalse"></param>
            <param name="failureMessage"></param>
        </member>
        <member name="M:KLGates.Core.Testing.English.Because.ResultIs``1">
            <summary>
            Asserts that the type of the result of the test Function 
            is the same as the type specified by generic type T.  Only valid
            if the test method returned a value.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:KLGates.Core.Testing.English.Because.IllLookAtIt(System.Object)">
            <summary>
            Does not perform an assertion, rather outputs the string representation of the specified obj
            using ToString().
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:KLGates.Core.Testing.English.Because.IllLookAtItsProperties``1(``0)">
            <summary>
            Does not perform an assertion, rather outputs the properties of the specified obj.
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:KLGates.Core.Testing.English.Because.ResultDerivesFrom``1">
            <summary>
            Asserts that the result inherits from (derives from/is a subclass of) the specified
            generic type T.  Only valid if the test method returned a value.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:KLGates.Core.Testing.English.Because.ThrowExceptionIfTheTestFailed(System.String)">
            <summary>
            Throws an exception if the test failed.  Same as OrNot.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:KLGates.Core.Testing.English.Because.UnlessItFailed(System.String)">
            <summary>
            Throws an exception if the test failed.  Same as ThrowExceptionIfTheTestFailed.
            </summary>
        </member>
        <member name="P:KLGates.Core.Testing.English.Because.TestDescription">
            <summary>
            Gets the desciption of the current test being run
            </summary>
        </member>
        <member name="P:KLGates.Core.Testing.English.Because.SetupContext">
            <summary>
            Gets the SetupContext instance for the current test.
            </summary>
        </member>
        <member name="P:KLGates.Core.Testing.English.Because.Passed">
            <summary>
            Gets a value indicating whether the current test has passed.
            </summary>
        </member>
        <member name="P:KLGates.Core.Testing.English.Because.Result">
            <summary>
            The return value of the test method execution
            </summary>        
        </member>
        <member name="T:KLGates.Core.Testing.English.IBecauseWriter">
            <summary>
            Defines the method used to write the results of a test.
            </summary>
        </member>
        <member name="M:KLGates.Core.Testing.English.IBecauseWriter.Write(KLGates.Core.Testing.English.Because)">
            <summary>
            When implemented by a derived class should
            write the results of a test contained in 
            the specified Because instance.
            </summary>
            <param name="because">The Because object containing test details including results.</param>
        </member>
        <member name="T:KLGates.Core.Testing.English.IAssertionWriter">
            <summary>
            Defines methods used to write passed and failed assertions.
            </summary>
        </member>
        <member name="M:KLGates.Core.Testing.English.IAssertionWriter.WritePassedAssertions(KLGates.Core.Testing.English.Assertion[])">
            <summary>
            When implemented in a derived class should write  
            the specified assertions in the "passed" format.
            Implementers "should" validate that the assertions
            actually passed.
            </summary>
            <param name="assertions"></param>
        </member>
        <member name="M:KLGates.Core.Testing.English.IAssertionWriter.WriteFailedAssertions(KLGates.Core.Testing.English.Assertion[])">
            <summary>
            When implemented in a derived class should write the
            specified assertions in the "failed" format.
            Implementers "should" validate that the assertions actually
            failed.
            </summary>
            <param name="assertions"></param>
        </member>
        <member name="T:KLGates.Core.Testing.English.TestContext`1">
            <summary>
            The context specific to a single set of tests.  Tracks
            the SetupContext, the test delegate and the assertions
            made during the verification phase of the test.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:KLGates.Core.Testing.English.TestContext`1.#ctor(KLGates.Core.Testing.English.SetupContext,System.String,System.Action{`0})">
            <summary>
            Creates a new test Context instance using the specified setupContext and 
            test description.
            </summary>
            <param name="setupContext">The setup or initialization context used for this
            test.</param>
            <param name="testDescription">The description of the current test.</param>
            <param name="action">The delegate containing the test actions</param>
        </member>
        <member name="M:KLGates.Core.Testing.English.TestContext`1.#ctor(KLGates.Core.Testing.English.SetupContext,System.String,System.Func{`0,System.Object})">
            <summary>
            Creates a new test Context instance using the specified setupContext and 
            test description.
            </summary>
            <param name="setupContext">The setup or initialization context used for this
            test.</param>
            <param name="testDescription">The description of the current test.</param>
            <param name="outputAction">The delegate containing the test which returns a value
            that can be validated during the verification phase of the test.</param>
        </member>
        <member name="M:KLGates.Core.Testing.English.TestContext`1.ShouldPass(System.Action{KLGates.Core.Testing.English.Because})">
            <summary>
            The entry point into test validation.  Calls the specified
            actionToAssertResults passing it the Because object of the 
            current test Context.
            </summary>
            <param name="actionToAssertResults"></param>
            <returns></returns>
        </member>
        <member name="M:KLGates.Core.Testing.English.TestContext`1.SoBeHappy">
            <summary>
            Calls Write() on the IBecauseWriter for the current test and
            marks the test complete.
            </summary>
            <returns></returns>
        </member>
        <member name="M:KLGates.Core.Testing.English.TestContext`1.SoBeHappy(System.Action{KLGates.Core.Testing.English.SetupContext})">
            <summary>
            Calls Write() on the IBecauseWriter for the current test and
            marks the test complete then runs the specified cleanup action.  
            Same as Cleanup.
            </summary>
            <param name="cleanup"></param>
            <returns></returns>
        </member>
        <member name="M:KLGates.Core.Testing.English.TestContext`1.Cleanup(System.Action{KLGates.Core.Testing.English.SetupContext})">
            <summary>
            Calls Write() on the IBecauseWriter for the current test and
            marks the test complete then runs the specified cleanup action.  
            Same as SoBeHappy.
            </summary>
            <param name="cleanup"></param>
            <returns></returns>
        </member>
        <member name="P:KLGates.Core.Testing.English.TestContext`1.TheTest">
            <summary>
            Causes the test to run, same as It.
            </summary>
        </member>
        <member name="P:KLGates.Core.Testing.English.TestContext`1.It">
            <summary>
            Causes the test to run, same as TheTest.
            </summary>
        </member>
        <member name="T:KLGates.Core.Testing.English.SetupContext">
            <summary>
            Represents the setup or initialization context used for a test.
            Different from the Context.
            </summary>
            <remarks>
            Though it isn't required that the SetupContext be used for test 
            initialization it is provided as an option.
            </remarks>
        </member>
        <member name="M:KLGates.Core.Testing.English.SetupContext.Construct``1(System.Object[])">
            <summary>
            Constructs an object of type T passing the specified ctorParams to the 
            contructor.
            </summary>
            <typeparam name="T">The type of the object to instantiate.</typeparam>
            <param name="ctorParams">The object values to pass to the constructor of type T.</param>
            <exception cref="T:System.InvalidOperationException">If the constructor with a signature matching
            the types of the specified ctorParams is not found.</exception>
        </member>
        <member name="M:KLGates.Core.Testing.English.SetupContext.Construct``1(System.Type[])">
            <summary>
            Constructs an object of type T using existing instances
            of the specified ctorTypes.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="ctorParamTypes"></param>
            <returns></returns>
        </member>
        <member name="M:KLGates.Core.Testing.English.SetupContext.WhenA``1(System.String,System.Action{``0})">
            <summary>
            Prepares the test context for object under test of type T.
            </summary>
            <typeparam name="T">The type of the object under test</typeparam>
            <param name="actionDescription">A description of what action is being tested</param>
            <param name="test">The Action to run, the object under test will be provided as a 
            parameter so the developer can interact with it.</param>
            <returns></returns>
        </member>
        <member name="M:KLGates.Core.Testing.English.SetupContext.WhenA``1(System.String,System.Func{``0,System.Object})">
            <summary>
            Prepares the test context for object under test of type T.
            </summary>
            <typeparam name="T">The type of the object under test</typeparam>
            <param name="actionDescription">A description of what action is being tested</param>
            <param name="test">The Func to run, the object under test will be provided as a 
            parameter so the developer can interact with it. Must return a value.</param>
            <returns></returns>
        </member>
        <member name="M:KLGates.Core.Testing.English.SetupContext.Get``1">
            <summary>
            Gets an object of type T if it has been instantiated otherwise
            calls Construct and returns the result.
            </summary>
            <typeparam name="T">The type of the object to get.</typeparam>
            <returns>T</returns>
        </member>
        <member name="M:KLGates.Core.Testing.English.SetupContext.Get``1(System.Object[])">
            <summary>
            Gets an object of type T if it has been instantiated otherwise
            calls Construct and returns the result.
            </summary>
            <typeparam name="T">The type of the object to get.</typeparam>
            <param name="ctorParams">Array of objects to pass to the constructor of type T</param>
            <returns>T</returns>
        </member>
        <member name="M:KLGates.Core.Testing.English.SetupContext.Get``1(System.Type[])">
            <summary>
            Gets an object of type T if it has been instantiated otherwise
            calls Construct and returns the result.
            </summary>
            <typeparam name="T">The type of the object get.</typeparam>
            <param name="ctorParamTypes">Array of types used to retrieve the parameters passed to the contructor of
            type T</param>
            <returns>T</returns>
        </member>
        <member name="M:KLGates.Core.Testing.English.SetupContext.Set``1(``0)">
            <summary>
            Sets the inner instance of type T to the specified
            instance.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="instance"></param>
        </member>
        <member name="P:KLGates.Core.Testing.English.SetupContext.Item(System.Type)">
            <summary>
            Gets the inner instance of the type specified or
            null if it has not been set through a call to Set(), Get() or 
            Construct().
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:KLGates.Core.Testing.English.When">
            <summary>
            Convenience entry point into a test that requires no setup through the SetupContext
            </summary>
        </member>
        <member name="M:KLGates.Core.Testing.English.When.A``1(System.String,System.Func{``0,System.Object})">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="actionDescription"></param>
            <param name="test"></param>
            <returns></returns>
        </member>
        <member name="M:KLGates.Core.Testing.English.When.A``1(System.String,``0,System.Func{``0,System.Object})">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="actionDescription"></param>
            <param name="objectUnderTest"></param>
            <param name="test"></param>
            <returns></returns>
        </member>
        <member name="M:KLGates.Core.Testing.English.When.A``1(System.String,System.Action{``0})">
            <summary>
            Prepares the test Context with an empty SetupContext instantiating the 
            object under test to an instance of T using the default constructor of type T.
            </summary>
            <typeparam name="T">The type of the </typeparam>
            <param name="actionDescription"></param>
            <param name="test"></param>
            <returns></returns>
        </member>
        <member name="M:KLGates.Core.Testing.English.When.A``1(System.String,``0,System.Action{``0})">
            <summary>
            Prepares the test Context with an empty SetupContext setting the object under test
            to the specified objectUnderTest
            </summary>
            <typeparam name="T">The type of the object under test.</typeparam>
            <param name="actionDescription">A description of what the test action will do</param>
            <param name="objectUnderTest">The object instance being tested</param>
            <param name="test">the test delegate</param>
            <returns>Context</returns>
        </member>
        <member name="M:KLGates.Core.UserUtil.StripDomain(System.String)">
            <summary>
            Returns the value at index 1 after splitting the specified name
            at the backslash character (\).  If there are no backslash characters the 
            full value is returned.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:KLGates.Core.UserUtil.GetCurrentUser">
            <summary>
            Returns the current user of the application.  If this 
            method is called from a web application the current web
            user is returned, otherwise the name of the owner of the
            current process is returned.
            </summary>
            <returns></returns>
        </member>
        <member name="M:KLGates.Core.UserUtil.GetCurrentUser(System.Boolean)">
            <summary>
            Returns the current user of the application.  If this 
            method is called from a web application the current web
            user is returned, otherwise the name of the owner of the
            current process is returned.
            </summary>
            <param name="includeDomain"></param>
            <returns></returns>
        </member>
        <member name="M:KLGates.Core.UserUtil.GetCurrentWindowsUser(System.Boolean)">
            <summary>
            Gets the current Windows user.  This is typically the owner of the currently
            running process.
            </summary>
            <param name="includeDomain">True to return &lt;domain&gt;\&lt;userName&gt;, if false &lt;userName&gt;</param>
            <returns>User as string</returns>
        </member>
        <member name="M:KLGates.Core.UserUtil.GetCurrentWindowsUserDomain">
            <summary>
            Gets the domain of the current Windows user.  The current Windows user is 
            typically the owner of the currently running process.
            </summary>
            <returns>The domain of the current Windows user.</returns>
        </member>
        <member name="M:KLGates.Core.UserUtil.GetCurrentUserDomain">
            <summary>
            Gets the domain of the current user.  If running in a web app the 
            web user's domain is returned otherwise the domain of the current
            windows user is returned.
            </summary>
            <returns></returns>
        </member>
        <member name="T:KLGates.Core.Validation.NamespaceDoc">
            <summary>
            The KLGates.Core.Validation namespace contains classes, interfaces and value types used to aide
            in validation of data entities.  
            </summary>
        </member>
        <member name="P:KLGates.Core.Validation.ValidationRuleSet`1.Description">
            <summary>
            Gets or sets the description for this ValidationRule
            </summary>
        </member>
    </members>
</doc>
